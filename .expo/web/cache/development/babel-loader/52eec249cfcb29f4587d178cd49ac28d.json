{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/antoniussuharmono/dev/binus/ujian/react-native-ujian/movie-list-ujian/app/components/common/InputSearch/index.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Feather } from '@expo/vector-icons';\nimport { TouchableOpacity } from \"../TouchableOpacity\";\nimport { ROUTES } from \"../../../navigation/routes\";\nimport { darkGray } from \"../../../utils/colors\";\nimport styles from \"./styles\";\n\nvar InputSearch = function InputSearch(_ref) {\n  var navigate = _ref.navigate;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var onChangeSearch = function onChangeSearch(value) {\n    setSearch(value);\n  };\n\n  var handleClearSearch = function handleClearSearch() {\n    setSearch('');\n  };\n\n  var handleSubmit = function handleSubmit() {\n    if (search) {\n      navigate(ROUTES.SEARCH_RESULTS, {\n        typeRequest: 'search',\n        name: search\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.containerInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.inputDirection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Feather, {\n    style: styles.icon,\n    name: \"search\",\n    size: 20,\n    color: darkGray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    onSubmitEditing: handleSubmit,\n    onChangeText: function onChangeText(value) {\n      return onChangeSearch(value);\n    },\n    value: search,\n    accessibilityRole: \"search\",\n    returnKeyType: \"search\",\n    keyboardType: \"default\",\n    blurOnSubmit: true,\n    multiline: false,\n    autoCorrect: false,\n    underlineColorAndroid: \"transparent\",\n    placeholderTextColor: darkGray,\n    placeholder: \"Search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), search.length > 0 && React.createElement(TouchableOpacity, {\n    onPress: handleClearSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Feather, {\n    style: styles.icon,\n    name: \"x\",\n    size: 20,\n    color: darkGray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default InputSearch;","map":{"version":3,"sources":["/Users/antoniussuharmono/dev/binus/ujian/react-native-ujian/movie-list-ujian/app/components/common/InputSearch/index.js"],"names":["React","useState","Feather","TouchableOpacity","ROUTES","darkGray","styles","InputSearch","navigate","search","setSearch","onChangeSearch","value","handleClearSearch","handleSubmit","SEARCH_RESULTS","typeRequest","name","container","containerInput","inputDirection","icon","textInput","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,SAASC,gBAAT;AAEA,SAASC,MAAT;AAEA,SAASC,QAAT;AAEA,OAAOC,MAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACRP,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MAC7BQ,MAD6B;AAAA,MACrBC,SADqB;;AAGpC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9BF,IAAAA,SAAS,CAACE,KAAD,CAAT;AACD,GAFD;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAFD;;AAIA,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIL,MAAJ,EAAY;AACVD,MAAAA,QAAQ,CAACJ,MAAM,CAACW,cAAR,EAAwB;AAC9BC,QAAAA,WAAW,EAAE,QADiB;AAE9BC,QAAAA,IAAI,EAAER;AAFwB,OAAxB,CAAR;AAID;AACF,GAPD;;AASA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACY,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEd,MAAM,CAACe,IADhB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,KAAK,EAAEhB,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACgB,SADhB;AAEE,IAAA,eAAe,EAAER,YAFnB;AAGE,IAAA,YAAY,EAAE,sBAAAF,KAAK;AAAA,aAAID,cAAc,CAACC,KAAD,CAAlB;AAAA,KAHrB;AAIE,IAAA,KAAK,EAAEH,MAJT;AAKE,IAAA,iBAAiB,EAAC,QALpB;AAME,IAAA,aAAa,EAAC,QANhB;AAOE,IAAA,YAAY,EAAC,SAPf;AAQE,IAAA,YAAY,MARd;AASE,IAAA,SAAS,EAAE,KATb;AAUE,IAAA,WAAW,EAAE,KAVf;AAWE,IAAA,qBAAqB,EAAC,aAXxB;AAYE,IAAA,oBAAoB,EAAEJ,QAZxB;AAaE,IAAA,WAAW,EAAC,QAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAsBGI,MAAM,CAACc,MAAP,GAAgB,CAAhB,IACC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEV,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACe,IADhB;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,KAAK,EAAEhB,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvBJ,CADF,CADF,CADF;AAuCD,CA3DD;;AA6DA,eAAeE,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nimport { TouchableOpacity } from '../TouchableOpacity';\n\nimport { ROUTES } from '../../../navigation/routes';\n\nimport { darkGray } from '../../../utils/colors';\n\nimport styles from './styles';\n\nconst InputSearch = ({ navigate }) => {\n  const [search, setSearch] = useState('');\n\n  const onChangeSearch = value => {\n    setSearch(value);\n  };\n\n  const handleClearSearch = () => {\n    setSearch('');\n  };\n\n  const handleSubmit = () => {\n    if (search) {\n      navigate(ROUTES.SEARCH_RESULTS, {\n        typeRequest: 'search',\n        name: search\n      });\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.containerInput}>\n        <View style={styles.inputDirection}>\n          <Feather\n            style={styles.icon}\n            name=\"search\"\n            size={20}\n            color={darkGray}\n          />\n          <TextInput\n            style={styles.textInput}\n            onSubmitEditing={handleSubmit}\n            onChangeText={value => onChangeSearch(value)}\n            value={search}\n            accessibilityRole=\"search\"\n            returnKeyType=\"search\"\n            keyboardType=\"default\"\n            blurOnSubmit\n            multiline={false}\n            autoCorrect={false}\n            underlineColorAndroid=\"transparent\"\n            placeholderTextColor={darkGray}\n            placeholder=\"Search\"\n          />\n          {search.length > 0 && (\n            <TouchableOpacity onPress={handleClearSearch}>\n              <Feather\n                style={styles.icon}\n                name=\"x\"\n                size={20}\n                color={darkGray}\n              />\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default InputSearch;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/antoniussuharmono/dev/binus/ujian/react-native-ujian/movie-list-ujian/app/components/cards/rows/PosterRow/index.js\";\n\nimport React, { useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport ImagesModal from \"../../../modals/ImagesModal\";\nimport VideoModal from \"../../../modals/VideoModal\";\nimport { TouchableOpacity } from \"../../../common/TouchableOpacity\";\nimport { Image } from \"../../../common/Image\";\nimport { getResponsiveWidth } from \"../../../../utils/dimensions\";\nimport { getImageApi } from \"../../../../utils/images\";\nimport { getAvarageRating } from \"../../../../utils/rating\";\nimport { white } from \"../../../../utils/colors\";\nimport styles from \"./styles\";\nvar PLAY_WIDTH = getResponsiveWidth(7);\nvar STAR_HEIGHT = getResponsiveWidth(6);\n\nvar PosterRow = function PosterRow(_ref) {\n  var title = _ref.title,\n      backdropPath = _ref.backdropPath,\n      voteAverage = _ref.voteAverage,\n      images = _ref.images,\n      video = _ref.video,\n      showImage = _ref.showImage,\n      onPress = _ref.onPress;\n  var videoModalRef = useRef(null);\n\n  var handlePlayVideo = function handlePlayVideo() {\n    var _videoModalRef$curren;\n\n    (_videoModalRef$curren = videoModalRef.current) == null ? void 0 : _videoModalRef$curren.open();\n  };\n\n  return React.createElement(View, {\n    style: styles.containerMainPhoto,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    accessibilityLabel: title + \" image\",\n    uri: getImageApi(backdropPath),\n    resizeMode: \"cover\",\n    width: \"100%\",\n    height: \"100%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), video && video.site === 'YouTube' && React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: styles.play,\n    onPress: handlePlayVideo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"play\",\n    size: PLAY_WIDTH,\n    color: white,\n    style: styles.buttonPlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), React.createElement(VideoModal, {\n    ref: videoModalRef,\n    keyId: video.key,\n    style: styles.bottomModal,\n    onClose: handlePlayVideo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.containerMainPhotoInfo,\n    activeOpacity: images.length ? 0.5 : 1,\n    onPress: images.length ? onPress : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.containerBackgroundPhotoInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.photoInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, title), React.createElement(View, {\n    style: styles.photoStar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, getAvarageRating(voteAverage).map(function (value) {\n    return React.createElement(FontAwesome, {\n      key: value,\n      name: \"star\",\n      size: STAR_HEIGHT,\n      color: white,\n      style: styles.star,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    });\n  })))), images.length ? React.createElement(ImagesModal, {\n    showImage: showImage,\n    images: images,\n    onClose: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default PosterRow;","map":{"version":3,"sources":["/Users/antoniussuharmono/dev/binus/ujian/react-native-ujian/movie-list-ujian/app/components/cards/rows/PosterRow/index.js"],"names":["React","useRef","FontAwesome","ImagesModal","VideoModal","TouchableOpacity","Image","getResponsiveWidth","getImageApi","getAvarageRating","white","styles","PLAY_WIDTH","STAR_HEIGHT","PosterRow","title","backdropPath","voteAverage","images","video","showImage","onPress","videoModalRef","handlePlayVideo","current","open","containerMainPhoto","site","play","buttonPlay","key","bottomModal","containerMainPhotoInfo","length","containerBackgroundPhotoInfo","photoInfo","photoStar","map","value","star"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { View, Text } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\n\nimport ImagesModal from '../../../modals/ImagesModal';\nimport VideoModal from '../../../modals/VideoModal';\nimport { TouchableOpacity } from '../../../common/TouchableOpacity';\nimport { Image } from '../../../common/Image';\n\nimport { getResponsiveWidth } from '../../../../utils/dimensions';\nimport { getImageApi } from '../../../../utils/images';\nimport { getAvarageRating } from '../../../../utils/rating';\n\nimport { white } from '../../../../utils/colors';\n\nimport styles from './styles';\n\nconst PLAY_WIDTH = getResponsiveWidth(7);\nconst STAR_HEIGHT = getResponsiveWidth(6);\n\nconst PosterRow = ({\n  title,\n  backdropPath,\n  voteAverage,\n  images,\n  video,\n  showImage,\n  onPress\n}) => {\n  const videoModalRef = useRef(null);\n\n  const handlePlayVideo = () => {\n    videoModalRef.current?.open();\n  };\n\n  return (\n    <View style={styles.containerMainPhoto}>\n      <Image\n        accessibilityLabel={`${title} image`}\n        uri={getImageApi(backdropPath)}\n        resizeMode=\"cover\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n      {video && video.site === 'YouTube' && (\n        <>\n          <TouchableOpacity style={styles.play} onPress={handlePlayVideo}>\n            <FontAwesome\n              name=\"play\"\n              size={PLAY_WIDTH}\n              color={white}\n              style={styles.buttonPlay}\n            />\n          </TouchableOpacity>\n          <VideoModal\n            ref={videoModalRef}\n            keyId={video.key}\n            style={styles.bottomModal}\n            onClose={handlePlayVideo}\n          />\n        </>\n      )}\n      <TouchableOpacity\n        style={styles.containerMainPhotoInfo}\n        activeOpacity={images.length ? 0.5 : 1}\n        onPress={images.length ? onPress : null}\n      >\n        <View style={styles.containerBackgroundPhotoInfo}>\n          <Text numberOfLines={2} style={styles.photoInfo}>\n            {title}\n          </Text>\n          <View style={styles.photoStar}>\n            {getAvarageRating(voteAverage).map((value) => (\n              <FontAwesome\n                key={value}\n                name=\"star\"\n                size={STAR_HEIGHT}\n                color={white}\n                style={styles.star}\n              />\n            ))}\n          </View>\n        </View>\n      </TouchableOpacity>\n      {images.length ? (\n        <ImagesModal showImage={showImage} images={images} onClose={onPress} />\n      ) : null}\n    </View>\n  );\n};\n\nexport default PosterRow;\n"]},"metadata":{},"sourceType":"module"}
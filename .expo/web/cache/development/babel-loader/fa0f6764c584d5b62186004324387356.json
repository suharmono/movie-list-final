{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/antoniussuharmono/dev/binus/ujian/react-native-ujian/movie-list-ujian/app/components/cards/rows/MovieRow/index.js\";\n\nimport React, { memo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TouchableOpacity } from \"../../../common/TouchableOpacity\";\nimport { Image } from \"../../../common/Image\";\nimport { getResponsiveWidth } from \"../../../../utils/dimensions\";\nimport { getImageApi } from \"../../../../utils/images\";\nimport { convertToUpperCaseFirstLetter } from \"../../../../utils/letters\";\nimport { convertToYear } from \"../../../../utils/dates\";\nimport { convertTypeWithGenre } from \"../../../../utils/genre\";\nimport { ROUTES } from \"../../../../navigation/routes\";\nimport isoLanguage from \"../../../../data/iso.json\";\nimport styles from \"./styles\";\nvar WIDTH = getResponsiveWidth(30);\nvar HEIGHT = getResponsiveWidth(40);\n\nvar getLanguage = function getLanguage(value) {\n  var str = isoLanguage[value] || '';\n  return convertToUpperCaseFirstLetter(str);\n};\n\nvar renderDivider = function renderDivider(releaseDate, originalLanguage) {\n  return releaseDate && originalLanguage !== 'xx' ? React.createElement(Text, {\n    style: styles.trace,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"|\") : null;\n};\n\nvar renderScore = function renderScore(voteAverage) {\n  var color = voteAverage < 5 ? 'low' : voteAverage >= 5 && voteAverage < 7 ? 'mid' : 'high';\n  return React.createElement(View, {\n    style: [styles.score, styles[color]],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.textPercent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, voteAverage));\n};\n\nvar MovieRow = memo(function (_ref) {\n  var numColumns = _ref.numColumns,\n      item = _ref.item,\n      type = _ref.type,\n      isSearch = _ref.isSearch,\n      navigate = _ref.navigate;\n  return React.createElement(React.Fragment, null, numColumns === 1 ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigate(ROUTES.MOVIE_DETAILS, {\n        id: item.id,\n        title: item.title\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    accessibilityRole: \"imagebutton\",\n    accessibilityLabel: item.title + \" image\",\n    uri: getImageApi(item.poster_path),\n    width: WIDTH,\n    height: HEIGHT,\n    style: styles.photo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.textTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, item.title), React.createElement(View, {\n    style: [styles.textRow, styles.containerSubTitle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textSmall,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, convertToYear(item.release_date)), renderDivider(item.release_date, item.original_language), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.textSmall,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, getLanguage(item.original_language))), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.textSmall,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, convertTypeWithGenre(item.genre_ids, type, isSearch))), React.createElement(View, {\n    style: [styles.textRow, styles.containerReview],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, renderScore(item.vote_average))))) : React.createElement(TouchableOpacity, {\n    style: styles.containerTwoItem,\n    onPress: function onPress() {\n      return navigate(ROUTES.MOVIE_DETAILS, {\n        id: item.id,\n        title: item.title\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    accessibilityRole: \"imagebutton\",\n    accessibilityLabel: item.title + \" image\",\n    uri: getImageApi(item.poster_path),\n    style: styles.photo,\n    width: WIDTH,\n    height: HEIGHT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.textTwoTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, item.title)));\n}, function (prevProps, nextProps) {\n  return prevProps.item.id === nextProps.item.id;\n});\nexport default MovieRow;","map":{"version":3,"sources":["/Users/antoniussuharmono/dev/binus/ujian/react-native-ujian/movie-list-ujian/app/components/cards/rows/MovieRow/index.js"],"names":["React","memo","TouchableOpacity","Image","getResponsiveWidth","getImageApi","convertToUpperCaseFirstLetter","convertToYear","convertTypeWithGenre","ROUTES","isoLanguage","styles","WIDTH","HEIGHT","getLanguage","value","str","renderDivider","releaseDate","originalLanguage","trace","renderScore","voteAverage","color","score","textPercent","MovieRow","numColumns","item","type","isSearch","navigate","MOVIE_DETAILS","id","title","containerItem","poster_path","photo","textTitle","textRow","containerSubTitle","textSmall","release_date","original_language","genre_ids","containerReview","vote_average","containerTwoItem","textTwoTitle","prevProps","nextProps"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { View, Text } from 'react-native';\n\nimport { TouchableOpacity } from '../../../common/TouchableOpacity';\nimport { Image } from '../../../common/Image';\n\nimport { getResponsiveWidth } from '../../../../utils/dimensions';\nimport { getImageApi } from '../../../../utils/images';\nimport { convertToUpperCaseFirstLetter } from '../../../../utils/letters';\nimport { convertToYear } from '../../../../utils/dates';\nimport { convertTypeWithGenre } from '../../../../utils/genre';\n\nimport { ROUTES } from '../../../../navigation/routes';\n\nimport isoLanguage from '../../../../data/iso.json';\n\nimport styles from './styles';\n\nconst WIDTH = getResponsiveWidth(30);\nconst HEIGHT = getResponsiveWidth(40);\n\nconst getLanguage = (value) => {\n  const str = isoLanguage[value] || '';\n\n  return convertToUpperCaseFirstLetter(str);\n};\n\nconst renderDivider = (releaseDate, originalLanguage) =>\n  releaseDate && originalLanguage !== 'xx' ? (\n    <Text style={styles.trace}>|</Text>\n  ) : null;\n\nconst renderScore = (voteAverage) => {\n  const color =\n    voteAverage < 5\n      ? 'low'\n      : voteAverage >= 5 && voteAverage < 7\n      ? 'mid'\n      : 'high';\n\n  return (\n    <View style={[styles.score, styles[color]]}>\n      <Text style={styles.textPercent}>{voteAverage}</Text>\n    </View>\n  );\n};\n\nconst MovieRow = memo(\n  ({ numColumns, item, type, isSearch, navigate }) => (\n    <>\n      {numColumns === 1 ? (\n        <TouchableOpacity\n          onPress={() =>\n            navigate(ROUTES.MOVIE_DETAILS, { id: item.id, title: item.title })\n          }\n        >\n          <View style={styles.containerItem}>\n            <Image\n              accessibilityRole=\"imagebutton\"\n              accessibilityLabel={`${item.title} image`}\n              uri={getImageApi(item.poster_path)}\n              width={WIDTH}\n              height={HEIGHT}\n              style={styles.photo}\n            />\n            <View style={styles.item}>\n              <View>\n                <Text numberOfLines={2} style={styles.textTitle}>\n                  {item.title}\n                </Text>\n                <View style={[styles.textRow, styles.containerSubTitle]}>\n                  <Text style={styles.textSmall}>\n                    {convertToYear(item.release_date)}\n                  </Text>\n                  {renderDivider(item.release_date, item.original_language)}\n                  <Text numberOfLines={1} style={styles.textSmall}>\n                    {getLanguage(item.original_language)}\n                  </Text>\n                </View>\n                <Text numberOfLines={1} style={styles.textSmall}>\n                  {convertTypeWithGenre(item.genre_ids, type, isSearch)}\n                </Text>\n              </View>\n              <View style={[styles.textRow, styles.containerReview]}>\n                {renderScore(item.vote_average)}\n              </View>\n            </View>\n          </View>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity\n          style={styles.containerTwoItem}\n          onPress={() =>\n            navigate(ROUTES.MOVIE_DETAILS, { id: item.id, title: item.title })\n          }\n        >\n          <View>\n            <Image\n              accessibilityRole=\"imagebutton\"\n              accessibilityLabel={`${item.title} image`}\n              uri={getImageApi(item.poster_path)}\n              style={styles.photo}\n              width={WIDTH}\n              height={HEIGHT}\n            />\n          </View>\n          <Text numberOfLines={2} style={styles.textTwoTitle}>\n            {item.title}\n          </Text>\n        </TouchableOpacity>\n      )}\n    </>\n  ),\n  (prevProps, nextProps) => prevProps.item.id === nextProps.item.id\n);\n\nexport default MovieRow;\n"]},"metadata":{},"sourceType":"module"}